- instruction set

  encoding          instruction   description
    
0   0000iiiiiiiitttt  mov i,t       regs[t] = i; pc += 1;
1   0001aaaabbbbtttt  add a,b,t     regs[t] = regs[a] + regs[b]; pc += 1;
7   0111aaaabbbbtttt  sub a,b,t     regs[t] = regs[a] - regs[b]; pc += 1;
9   1001aaaabbbbtttt  mul a,b,t     regs[t] = regs[a] * regs[b]; pc += 1;
10  1010aaaabbbbtttt  div a,b,t     regs[t] = regs[a] / regs[b]; pc += 1;
2   0010jjjjjjjjjjjj  jmp j         pc = j;
3   0011000000000000  halt          <stop fetching instructions>
4   0100iiiiiiiitttt  ld i,t        regs[t] = mem[i]; pc += 1;
5   0101aaaabbbbtttt  ldr a,b,t     regs[t] = mem[regs[a]+regs[b]]; pc += 1;
6   0110aaaabbbbtttt  jeq a,b,t     if (regs[a] == regs[b]) pc += d
                                    else pc += 1;                                    
11  1011aaaabbbbtttt  jlt           if(regs[a] < regs[b]) pc += t
                                    else pc += 1;
8   1000aaaabbbbcccc print a	    print regs[a]; pc += 1;
				                    (a == b == c. This makes implementation easier)
12  1100iiiiiiiiiiii print i  	    print character i in ascii; pc += 1;

- to Run
 Name memory file a.hex, and store in the /processor/ dir
 Run ./cpu

~~~~~ known bug ~~~~~~
Any instruction that begins with '16' will not run, because is being used as a default value in cycle 1
